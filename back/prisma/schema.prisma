generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  password   String
  email      String    @unique
  isClient   Boolean   @default(true)
  Client     Client?   @relation(fields: [clientId], references: [id])
  clientId   Int?
  Employee   Employee? @relation(fields: [employeeId], references: [id])
  employeeId Int?
}

model Client {
  id              Int               @id @default(autoincrement())
  first_name      String
  last_name       String
  email           String            @unique
  photo           String            @db.LongText
  createdAt       DateTime          @default(now())
  reclamation     Reclamation[]
  orderReparation OrderReparation[]
  user            User[]
  entreeDevice    EntreeDevice[]
  order           Order[]
}

model Employee {
  id         Int     @id @default(autoincrement())
  first_name String
  last_name  String
  photo      String  @db.LongText
  email      String  @unique
  role       Role    @default(technicien)
  user       User[]
  etape      Etape[]
}

model Reclamation {
  id          Int               @id @default(autoincrement())
  image       String?           @db.LongText
  titel       String
  description String
  createdAt   DateTime          @default(now())
  Client      Client?           @relation(fields: [clientId], references: [id])
  clientId    Int?
  fiche       OrderReparation[]
}

model EntreeDevice {
  id          Int      @id @default(autoincrement())
  title       String
  image       String?  @db.LongText
  rapport     String
  statues     String
  description String
  createdAt   DateTime @default(now())
  Client      Client?  @relation(fields: [clientId], references: [id])
  clientId    Int?
  Etape       Etape?   @relation(fields: [etapeId], references: [id])
  etapeId     Int?
}

model OrderReparation {
  id            Int                 @id @default(autoincrement())
  title         String
  rapport       String
  description   String
  status        String
  date          DateTime?
  Client        Client?             @relation(fields: [clientId], references: [id])
  clientId      Int?
  Reclamation   Reclamation?        @relation(fields: [reclamationId], references: [id])
  reclamationId Int?
  etape         Etape[]
  order         Order[]
  fiches        FicheIntervention[]
}

model FicheIntervention {
  id                Int                        @id @default(autoincrement())
  OrderReparation   OrderReparation?           @relation(fields: [orderReparationId], references: [id])
  orderReparationId Int?
  details           FicheInterventionDetails[]
  status            String
}

model FicheInterventionDetails {
  id Int @id @default(autoincrement())

  FicheIntervention   FicheIntervention? @relation(fields: [ficheInterventionId], references: [id])
  ficheInterventionId Int?
}

model Etape {
  id                Int              @id @default(autoincrement())
  title             String
  ongoing           Boolean
  rapport           String
  description       String
  status            String
  type              String
  date              DateTime
  createdAt         DateTime         @default(now())
  Employee          Employee?        @relation(fields: [employeeId], references: [id])
  employeeId        Int?
  OrderReparation   OrderReparation? @relation(fields: [orderReparationId], references: [id])
  orderReparationId Int?
  entreeDevice      EntreeDevice[]
}

model Order {
  id                Int              @id @default(autoincrement())
  name              String
  description       String
  createdAt         DateTime         @default(now())
  confirm           String
  orderline         Orderline[]
  Client            Client?          @relation(fields: [clientId], references: [id])
  clientId          Int?
  orderReparation   OrderReparation? @relation(fields: [orderReparationId], references: [id])
  orderReparationId Int?
}

model Orderline {
  id      Int    @id @default(autoincrement())
  Order   Order? @relation(fields: [orderId], references: [id])
  orderId Int?
}

enum Role {
  technicien
  admin
  manager
  receptionist
}
