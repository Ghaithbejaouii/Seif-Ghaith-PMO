generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  password   String
  email      String
  Client     Client?   @relation(fields: [clientId], references: [id])
  clientId   Int?
  Employee   Employee? @relation(fields: [employeeId], references: [id])
  employeeId Int?
}

model Client {
  id           Int                  @id @default(autoincrement())
  name         String
  email        String
  password     String
  createdAt    DateTime             @default(now())
  reclamation  Reclamation[]
  fiche        Fiche_intervention[]
  user         User[]
  entreeDevice EntreeDevice[]
  order        Order[]
}

model Employee {
  id       Int     @id @default(autoincrement())
  name     String
  email    String
  password String
  role     String
  user     User[]
  etape    Etape[]
}

model Reclamation {
  id          Int                  @id @default(autoincrement())
  titel       String
  description String
  createdAt   DateTime             @default(now())
  Client      Client?              @relation(fields: [clientId], references: [id])
  clientId    Int?
  fiche       Fiche_intervention[]
}

model EntreeDevice {
  id          Int      @id @default(autoincrement())
  title       String
  rapport     String
  statues     String
  description String
  createdAt   DateTime @default(now())
  Client      Client?  @relation(fields: [clientId], references: [id])
  clientId    Int?
  Etape       Etape?   @relation(fields: [etapeId], references: [id])
  etapeId     Int?
}

model Fiche_intervention {
  id            Int          @id @default(autoincrement())
  title         String
  rapport       String
  description   String
  status        String
  date          DateTime?
  createdAt     DateTime     @default(now())
  Client        Client?      @relation(fields: [clientId], references: [id])
  clientId      Int?
  Reclamation   Reclamation? @relation(fields: [reclamationId], references: [id])
  reclamationId Int?
  etape         Etape[]
  order         Order[]
}

model Etape {
  id                   Int                 @id @default(autoincrement())
  title                String
  rapport              String
  description          String
  status               String
  type                 String
  date                 DateTime?
  createdAt            DateTime            @default(now())
  Employee             Employee?           @relation(fields: [employeeId], references: [id])
  employeeId           Int?
  Fiche_intervention   Fiche_intervention? @relation(fields: [fiche_interventionId], references: [id])
  fiche_interventionId Int?
  entreeDevice         EntreeDevice[]
}

model Order {
  id                   Int                 @id @default(autoincrement())
  name          String
  description String
  createdAt     DateTime     @default(now())
  confirm              String
  orderline            Orderline[]
  Client               Client?             @relation(fields: [clientId], references: [id])
  clientId             Int?
  Fiche_intervention   Fiche_intervention? @relation(fields: [fiche_interventionId], references: [id])
  fiche_interventionId Int?
}

model Orderline {
  id      Int    @id @default(autoincrement())
  Order   Order? @relation(fields: [orderId], references: [id])
  orderId Int?
}
